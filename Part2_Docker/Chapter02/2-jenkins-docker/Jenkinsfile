def mainDir="Part2_Docker/Chapter02/2-jenkins-docker"
def ecrLoginHelper="docker-credential-ecr-login"
def region="koreacentral"
def ecrUrl="shjtestacr01.azurecr.io"
def repository="test"
def deployHost="10.2.0.4"
def azureAcrLoginCommand="az acr login -n <registry name> -u <service principal의 app id >  -p <service princial의 client pw>"
def passwrd="befB4Lmi3UmY0eQVeCoPBnrlIFxRWk4ANn3jcAzIjB+ACRCGWNY7"

pipeline {
    agent any

    stages {
        stage('Pull Codes from Github'){
            steps{
                checkout scm
            }
        }
        stage('Build Codes by Gradle') {
            steps {
                sh """
                cd ${mainDir}
                ./gradlew clean build
                """
            }
        }
        stage('Build Docker Image by Jib & Push to AWS ECR Repository') {
            steps {
                    sh """
                        cat << password.txt
                         docker login shjtestacr01.azurecr.io -u shjtestacr01 -p befB4Lmi3UmY0eQVeCoPBnrlIFxRWk4ANn3jcAzIjB+ACRCGWNY7
                        cd ${mainDir}
                        ./gradlew jib -Djib.to.image=${ecrUrl}/${repository}:${currentBuild.number} -Djib.console='plain'
                    """
                
            }
        }
        stage('Deploy to Azure VM'){
            steps{
                sshagent(credentials : ["deploy-key"]) {
                    sh """ssh -o StrictHostKeyChecking=no shj@${deployHost} \
                    docker run -d -p 80:8080 -t ${ecrUrl}/${repository}:${currentBuild.number}"""
                }
            }
        }
    }
}
