def mainDir="Part2_Docker/Chapter02/2-jenkins-docker"
def ecrLoginHelper="docker-credential-ecr-login"
def region="koreacentral"
def ecrUrl="<AWS ECR URL>"
def repository="<Image Repository Name>"
def deployHost="10.2.0.4"

def CONTAINER_REGISTRY='shjtest'
def RESOURCE_GROUP='rg01-shj-study'
def REPO="test"
def IMAGE_NAME="test"
def TAG="tag"

def AZURE_SUBSCRIPTION_ID="8777399f-4ccc-4a5d-9ddb-059869424923"
def test=" az acr build --image $REPO/$IMAGE_NAME:$TAG --registry $CONTAINER_REGISTRY --file Dockerfile ."

def AZURE_TENANT_ID="a74b5451-a280-4768-a5cd-cb47af153c71"

pipeline {
    agent any

    stages {
        stage('Pull Codes from Github'){
            steps{
                checkout scm
            }
        }
        stage('Build Codes by Gradle') {
            steps {
                sh """
                cd ${mainDir}
                ./gradlew clean build
                """
            }
        }azure-service-principal
        stage('Build Docker Image by Jib & Push to ACR Repository') {
            steps {
                withCredentials([azureServicePrincipal(credentialsId: 'azure-service-principal', subscriptionIdVariable: 'SUBS_ID', clientIdVariable: 'CLIENT_ID', clientSecretVariable: 'CLIENT_SECRET', tenantIdVariable: 'TENANT_ID')])
                    sh """
                        az login --service-principal  $CLIENT_ID -p $CLIENT_SECRET -t $TENANT_ID
                        az account set -s $SUBS_ID
                        az acr login --name ${CONTAINER_REGISTRY} --resource-group ${RESOURCE_GROUP}
                        cd ${mainDir}
                        ./gradlew jib -Djib.to.image=${ecrUrl}/${repository}:${currentBuild.number} -Djib.console='plain'
                    """
                }
            }
        
        // stage('Build Docker Image by Jib & Push to AWS ECR Repository') {
        //     steps {
        //         withAWS(region:"${region}", credentials:"aws-key") {
        //             ecrLogin()
        //             sh """
        //                 curl -O https://amazon-ecr-credential-helper-releases.s3.us-east-2.amazonaws.com/0.4.0/linux-amd64/${ecrLoginHelper}
        //                 chmod +x ${ecrLoginHelper}
        //                 mv ${ecrLoginHelper} /usr/local/bin/
        //                 cd ${mainDir}
        //                 ./gradlew jib -Djib.to.image=${ecrUrl}/${repository}:${currentBuild.number} -Djib.console='plain'
        //             """
        //         }
        //     }
        // }
        // stage('Deploy to AWS EC2 VM'){
        //     steps{
        //         sshagent(credentials : ["deploy-key"]) {
        //             sh "ssh -o StrictHostKeyChecking=no ubuntu@${deployHost} \
        //              'aws ecr get-login-password --region ${region} | docker login --username AWS --password-stdin ${ecrUrl}/${repository}; \
        //               docker run -d -p 80:8080 -t ${ecrUrl}/${repository}:${currentBuild.number};'"
        //         }
        //     }
        // }
    }
}