def mainDir="Part2_Docker/Chapter02/2-jenkins-docker"
def ecrLoginHelper="docker-credential-ecr-login"
def region="koreacentral"
def ecrUrl="shjtestacr01.azurecr.io"
def repository="test"
def deployHost="10.2.0.4"
def azureAcrLoginCommand="az acr login -n <registry name> az acr login -n shjtestacr01.azurecr.io -u <service principal의 app id >  -p <service princial의 client pw>"


pipeline {
    agent any

    stages {
        stage('Pull Codes from Github'){
            steps{
                checkout scm
            }
        }
        stage('Build Codes by Gradle') {
            steps {
                sh """
                cd ${mainDir}
                ./gradlew clean build
                """
            }
        }
        stage('Build Docker Image by Jib & Push to AWS ECR Repository') {
            steps {
                withAWS(region:"${region}", credentials:"aws-key") {
                    ecrLogin()
                    //    curl -O https://amazon-ecr-credential-helper-releases.s3.us-east-2.amazonaws.com/0.4.0/linux-amd64/${ecrLoginHelper}
                    //    chmod +x ${ecrLoginHelper}
                    //    mv ${ecrLoginHelper} /usr/local/bin/
                    sh """

                        cd ${mainDir}
                        ./gradlew jib -Djib.to.image=${ecrUrl}/${repository}:${currentBuild.number} -Djib.console='plain'
                    """
                }
            }
        }
        stage('Deploy to Azure VM'){
            steps{
                sshagent(credentials : ["deploy-key"]) {
                    sh "ssh -o StrictHostKeyChecking=no shj@${deployHost} \
                      az acr login -n ${ecrUrl} -u 42cef4ac-8f6a-45b9-b8c2-eb81dc2486cd  -p nKE8Q~CIunq9YJctun6TmMxLC-uGZpLA.MXIEbK-\
                      docker run -d -p 80:8080 -t ${ecrUrl}/${repository}:${currentBuild.number};'"
                }
            }
        }
    }
}
